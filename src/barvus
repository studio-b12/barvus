#!/bin/sh

if [ $# -lt 1 ] || [ "${1:--h}" = '-h' ] || [ "${1:-}" = '--help' ]; then
    printf 'usage: %s BARE_ROOT [MDAYS] 1>report 2>summary\n' "$(basename "${0}")"
    exit 0
fi

root="${1:?BARE_ROOT}"
mtime="-$(printf '%d' "${2:-1}")"

trivy image -q --download-db-only

while IFS= read -r repo;
do
    if [ -z "${repo:-}" ] || ! ref="$(git -C "${repo}" rev-parse HEAD 2>/dev/null)"; then
        continue
    fi
    [ "${ref}" = "HEAD" ] && continue

    tmpd="$(mktemp -d)"
    git -C "${repo}" archive --format=tar HEAD | tar -C "${tmpd}" -xf -

    rpath="${repo##"${root}"}"
    rpath="${rpath%/.git}"

    trivy fs -q -s HIGH,CRITICAL --offline-scan --skip-db-update "${tmpd}" \
    | { tee /dev/fd/3 \
        | awk '/^Total:/ { gsub("[(),]", ""); print "'"${rpath}"': " $0; exit 0; }' 1>&2
    } 3>&1 \
        | awk 'h==0 && /./ { print "## '"${rpath}"'\n"; h=1; } { print; }'

    rm -rf -- "${tmpd}"

done <<EOF
$(find "${root}" \( -type f -path '*/refs/heads/*' -o -name 'HEAD' \) -not -path '*/logs/*' -mtime "${mtime}" -print -prune \
| sed 's:\/refs/.*$::;s:/HEAD$::' | sort -u)
EOF

#!/bin/sh

if [ $# -lt 1 ] || [ "${1:--h}" = '-h' ] || [ "${1:-}" = '--help' ]; then
    printf 'usage: %s BARE_ROOT [MDAYS] 1>report 2>summary\n' "$(basename "${0}")"
    exit 0
fi

ex=0
root="${1:?BARE_ROOT}"
mtime="-$(printf '%d' "${2:-1}")"

freport="$(mktemp)"
report="$(mktemp)"
trap 'rm -f -- "${freport}" "${report}";' 0

trivy image -q --download-db-only

while IFS= read -r repo;
do
    if [ -z "${repo:-}" ] || ! ref="$(git -C "${repo}" rev-parse HEAD 2>/dev/null)"; then
        continue
    fi
    [ "${ref}" = "HEAD" ] && continue

    tmpd="$(mktemp -d)"
    git -C "${repo}" archive --format=tar HEAD | tar -C "${tmpd}" -xf -
    if ! trivy fs --exit-code 1 -q -s HIGH,CRITICAL --offline-scan --skip-db-update "${tmpd}" > "${report}"; then
        ex=1
    fi
    if [ -s "${report}" ]; then
        rpath="${repo##"${root}"}"
        rpath="${rpath%/.git}"
        {
            printf '%s: ' "${rpath}"
            grep -m 1 '^Total:' -- "${report}" | tr -d '\(\),'
        } 1>&2
        {
            printf '## %s\n\n' "${rpath}"
            cat -- "${report}"
            printf '\n\n'
        } >> "${freport}"
    fi
    rm -rf -- "${tmpd}"

done <<EOF
$(find "${root}" \( -type f -path '*/refs/heads/*' -o -name 'HEAD' \) -not -path '*/logs/*' -mtime "${mtime}" -print -prune \
| sed 's:\/refs/.*$::;s:/HEAD$::' | sort -u)
EOF

if [ -s "${freport}" ]; then
    printf '\n\n- - -\n# Full Report\n\n'
    cat -- "${freport}"
fi

exit $ex
